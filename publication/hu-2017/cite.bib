@inproceedings{hu2017a,
 abstract = {Binary code clone detection (or similarity comparison) is a fundamental technique for many important applications, such as plagiarism detection, malware analysis, software vulnerability assessment and program comprehension. With the prevailing of smart and IoT (Internet of Things) devices, more and more programs are ported from traditional desktop platforms (e.g., IA-32) to ARM and MIPS architectures. It becomes imperative to detect cloned binary code across architectures. However, because of incomparable instruction sets of different architectures as well as alternative compiling conﬁgurations, it is difﬁcult to conduct a binary code clone detection with traditional syntax- or structure-based methods.},
 address = {Buenos Aires, Argentina},
 author = {Hu, Yikun and Zhang, Yuanyuan and Li, Juanru and Gu, Dawu},
 booktitle = {2017 IEEE/ACM 25th International Conference on Program Comprehension (ICPC)},
 doi = {10.1109/ICPC.2017.22},
 file = {Hu et al. - 2017 - Binary Code Clone Detection across Architectures a.pdf:/Users/REI/Zotero/storage/N8PJ8APV/Hu et al. - 2017 - Binary Code Clone Detection across Architectures a.pdf:application/pdf},
 isbn = {978-1-5386-0535-6},
 language = {en},
 month = {May},
 pages = {88--98},
 publisher = {IEEE},
 title = {Binary Code Clone Detection across Architectures and Compiling Configurations},
 url = {http://ieeexplore.ieee.org/document/7961507/},
 urldate = {2022-08-11},
 year = {2017}
}

